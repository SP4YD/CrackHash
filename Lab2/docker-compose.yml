services:
  worker_1:
    build:
      context: ./worker
    networks:
      - app_network

  worker_2:
    build:
      context: ./worker
    networks:
      - app_network

  worker_3:
    build:
      context: ./worker
    networks:
      - app_network

  manager:
    build:
      context: ./manager
    ports:
      - ${MANAGER_PORT}:${MANAGER_PORT}
    env_file:
      - manager/.env
    networks:
      - app_network
    depends_on:
      - worker_1
      - worker_2
      - worker_3

  mongo-primary:
    image: mongo:latest
    container_name: mongo-primary
    command: [ "--replSet", "rs0", "--bind_ip_all", "--keyFile", "/etc/mongo-keyfile" ]
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: pass
    ports:
      - 27017:27017
    volumes:
      - ./mongo-keyfile:/etc/mongo-keyfile:ro
      - mongo_data_primary:/data/db
    networks:
      - app_network

  mongo-secondary-1:
    image: mongo:latest
    container_name: mongo-secondary-1
    command: [ "--replSet", "rs0", "--bind_ip_all", "--keyFile", "/etc/mongo-keyfile" ]
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: pass
    volumes:
      - ./mongo-keyfile:/etc/mongo-keyfile:ro
      - mongo_data_secondary_1:/data/db
    networks:
      - app_network

  mongo-secondary-2:
    image: mongo:latest
    container_name: mongo-secondary-2
    command: [ "--replSet", "rs0", "--bind_ip_all", "--keyFile", "/etc/mongo-keyfile" ]
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: pass
    volumes:
      - ./mongo-keyfile:/etc/mongo-keyfile:ro
      - mongo_data_secondary_2:/data/db
    networks:
      - app_network

  mongo-init-replica:
    image: mongo:latest
    container_name: mongo-init-replica
    depends_on:
      - mongo-primary
      - mongo-secondary-1
      - mongo-secondary-2
    networks:
      - app_network
    entrypoint: [
      "sh", "-c",
      "
        sleep 10 &&
        mongosh --host mongo-primary:27017 -u admin -p pass --authenticationDatabase admin --eval '
          rs.initiate({
            _id: \"rs0\",
            members: [
              { _id: 0, host: \"mongo-primary:27017\" },
              { _id: 1, host: \"mongo-secondary-1:27017\" },
              { _id: 2, host: \"mongo-secondary-2:27017\" }
            ]
          })
        '
      "
    ]

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo-primary
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=pass
    networks:
      - app_network
    depends_on:
      - mongo-primary

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: pass
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app_network


networks:
  app_network:
    driver: bridge

volumes:
  mongo_data_primary:
  mongo_data_secondary_1:
  mongo_data_secondary_2:
  rabbitmq_data:
